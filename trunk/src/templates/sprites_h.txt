// sprites.h
// %%_PLATFORM_%% sprite data
// This file was automatically generated by Spritely %%_VERSION_%%

#ifndef _SPRITES_H_
#define _SPRITES_H_

// Structure to store basic information for each sprite
typedef struct {
	int first_tile;
	int num_tiles;
	int width;
	int height;
	int palette_id;
	int mask_index;
	int shape;
	int size;
} SpriteInfoStruct;

// These sprite data arrays are defined in sprites.cpp
const int kSpritePalette_Size = (32 * %%_NUM_SPRITE_PALETTES_%%);
extern const unsigned short int SpritePalette[];

// Sprite tile data.
const int kSpriteTiles_Size = (32 * %%_NUM_SPRITE_TILES_%%);
extern const unsigned char SpriteTiles[];

// Sprite bitmasks used for pixel-perfect collision detection.
extern const unsigned long int SpriteMasks[];

extern const SpriteInfoStruct SpriteInfo[];

const int kNumSprites = %%_NUM_SPRITES_%%;

// Sprite IDs
%%_SPRITE_IDS_%%

#endif	// _SPRITES_H_
