// main.cpp
// Sample %%_PLATFORM_%% project to demonstrate how to display sprites
// This file was automatically generated by Spritely %%_VERSION_%%

%%NDS:%%#include <nds.h>
%%GBA:%%#include <gba_interrupt.h>
%%GBA:%%#include <gba_systemcalls.h>
%%GBA:%%#include <gba_video.h>

#include "backgrounds.h"
#include "game_state.h"
#include "object_utils.h"
#include "sprites.h"

void InitDevice() {
%%NDS:%%	powerON(POWER_ALL_2D);
%%NDS:%%	
	// Enable interrupts.
	irqInit();
	irqEnable(IRQ_VBLANK);

%%NDS:%%	// Initialize the video mode and VRAM banks.
%%NDS:%%	videoSetMode(MODE_0_2D | DISPLAY_BG0_ACTIVE | DISPLAY_SPR_ACTIVE | DISPLAY_SPR_1D);
%%NDS:%%	vramSetMainBanks(VRAM_A_MAIN_SPRITE, VRAM_B_MAIN_SPRITE, VRAM_C_MAIN_BG_0x06000000, VRAM_D_LCD);
%%GBA:%%	// Initialize the video mode.
%%GBA:%%	SetMode(MODE_0 | BG0_ENABLE | OBJ_ENABLE | OBJ_1D_MAP);
}

int main() {
	InitDevice();
	InitSprites();
	InitBackgrounds();

	// Initialize the Objects.
	// This initializes all the objects to "off" so that we don't have garbage
	// appearing on the screen.
	InitializeObjects();

	InitGameState();
	UpdateScreen();

	while (true) {
		// Wait for the vertical blank interrupt so that we update the
		// screen at a constant rate.
%%NDS:%%		swiWaitForVBlank();
%%GBA:%%		VBlankIntrWait();

		UpdateGameState();
		UpdateScreen();
	}
}
